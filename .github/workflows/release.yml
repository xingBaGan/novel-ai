name: Build/release Electron app

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libdbus-1-dev \
            libgtk-3-dev \
            libnotify-dev \
            libasound2-dev \
            libcap-dev \
            libcups2-dev \
            libxtst-dev \
            libxss1 \
            libnss3-dev \
            gcc-multilib \
            g++-multilib

      - name: Install Dependencies
        run: npm install

      - name: Build/release Electron app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npm run build:win
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm run build:mac
          else
            npm run build:linux
          fi

      - name: Upload Artifacts
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.zip
            dist/*.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}